I"ï<h1 style="color:rgb(128,0,0); " id="moving-forward">Moving Forward</h1>

<p><img src="/bots-in-pieces/images/s3onegpio/extensions.png" alt="" /></p>

<p>This is going to be another short posting, allowing me to devote more
time to develop, test, and document the OneGPIO Scratch 3 extensions.</p>

<p>Progress since the last posting:</p>
<ul>
  <li>Extension support for Arduino, ESP-8266, and Raspberry Pi has been
broken out into three separate extensions allowing for:
    <ul>
      <li>The ability for multiple OneGPIO extensions to be active at a time.</li>
      <li>The ability to remotely control a Raspberry Pi from a Windows, Mac, or Linux
  computer.</li>
    </ul>
  </li>
  <li>The Scratch blocks were refactored for ease of use.
    <ul>
      <li>The <em>Connect</em> block was removed, and connecting to the extension
servers is now handled automatically without explicit user
interaction.</li>
      <li>Setting GPIO pin modes, such as input, output, and PWM is now
handled automatically within the command and reporter blocks.</li>
      <li>Block text was changed but is not yet finalized.</li>
    </ul>
  </li>
  <li>Cursory testing of the Arduino, ESP-8266, and Raspberry Pi extensions
is complete.</li>
</ul>

<h1 id="a-separate-extension-for-each-board-type">A Separate Extension For Each Board Type</h1>
<p>Each board type now has an extension of its own, and all are
<a href="https://mryslab.github.io/s3onegpio/">accessible from the web</a> in a
single Scratch 3 editor.</p>
<blockquote>
  <p>Note that these are ‚Äúunofficial‚Äù Scratch 3 extensions. The link above
is not part of the official Scratch 3 release, but are built from the
latest versions of the Scratch 3 source code provided by the Scratch
Team. Note also that the servers that connect an extension to its
associated hardware have not yet been released. The servers are fully
functional, but they are being refactored to make them more
user-friendly for easy start-up. They should be available for use by
the time the next posting is published.</p>
</blockquote>

<p>One of the advantages of having separate extensions is that more than
one board can be supported at a time. You can then create a Scratch
script that uses input data from one board to affect the devices on
another. For example, and this has been tested, one can monitor a push
button switch connected to an Arduino, and when the button is pushed, an
LED on a Raspberry Pi lights up. Release the switch, and the LED
extinguishes.</p>

<p>For the Raspberry Pi, one has the option to control its GPIO pins either
by running Scratch 3 directly on the Raspberry Pi or running Scratch 3
remotely on a Windows, Mac, or Linux computer.</p>

<h1 id="refactored-scratch-blocks">Refactored Scratch Blocks</h1>

<p>The Scratch blocks were refactored to be simpler to use. Pin modes are
set automatically when any of the blocks are executed. The <em>Connect</em>
block was removed, and connection to the board specific servers is now
performed automatically.</p>

<p>Block text was modified but has not been finalized.</p>

<h2 id="the-arduino-blocks">The Arduino Blocks</h2>

<p><img src="/bots-in-pieces/images/s3onegpio/arduino_blocks.png" alt="" /></p>

<h2 id="the-esp-8266-blocks">The ESP-8266 Blocks</h2>
<p><img src="/bots-in-pieces/images/s3onegpio/esp8266_blocks.png" alt="" /></p>

<h2 id="the-raspberry-pi-blocks">The Raspberry Pi Blocks</h2>
<p><img src="/bots-in-pieces/images/s3onegpio/rpi_blocks.png" alt="" /></p>

<h1 id="testing">Testing</h1>
<p>All three supported boards, the Arduino Uno, ESP-8266, and Raspberry Pi
have been tested, but have not been stressed. All blocks worked with all
boards as expected.</p>

<h1 id="upcoming-goals">Upcoming Goals</h1>
<ul>
  <li>Completion of the board-specific connection servers.</li>
  <li>Provide on-line documentation for installation, use, and theory of
operation for the OneGPIO extensions.</li>
  <li>Investigate providing integrated block text translations.</li>
</ul>

:ET